{"version":3,"sources":["components/GJNumberLabel.js","components/AvgTickerValues.js","components/GJNumbersView.js","components/CositoDeArriba.js","components/TradingPairsContainer.js","components/AppContainer.js","App.js","reportWebVitals.js","index.js"],"names":["GJNumberLabel","props","description","value","useState","formatedValue","setFormatedValue","useEffect","Date","toLocaleString","parseFloat","toFixed","className","AvgTickerValues","averageValue","setAverageValue","pairsData","setPairsData","loading","setLoading","a","Promise","all","fetch","then","data1","data2","data3","json","bitstamp","coinbase","bitfinex","name","bid","data","rates","USD","console","log","length","avg","reduce","acc","current","getAverageTickerValues","fetchTickerValues","Paper","elevation","CircularProgress","map","pair","GJNumbersView","pairComparison","setPairComparison","GJNumberLabels","setGJNumberLabels","symbol","resp","fetchedPairData","fetchPairComparison","GJNumberLabelsArray","descriptionValuePair","push","returnGJNumberLabels","GJNumberLabelsArrayElement","i","key","CositoDeArriba","pairData","handlePairChange","clearPairSelection","onClick","variant","color","onePair","url_symbol","TradingPairsContainer","setPair","setPairData","fetchPairData","AppContainer","Container","maxWidth","Grid","container","direction","justify","alignItems","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7fbcba9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function GJNumberLabel(props) {\n\n  const { description, value } = props;\n  const [formatedValue, setFormatedValue] = useState(value);\n\n  useEffect(() => {\n    if(description===\"timestamp\")\n    {\n      setFormatedValue(new Date(value*1000).toLocaleString())\n    }\n    else\n    {\n      setFormatedValue(`$ ${parseFloat(value).toFixed(2)}`)\n    }    \n  }, [description, value])\n\n\n  return (\n    <div className=\"gj-number-label\">\n      <div className=\"description\"><h4>{description}</h4></div>\n    <div className=\"value\">{formatedValue}</div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport '../styles/styles.css';\nimport GJNumberLabel from \"./GJNumberLabel\";\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function AvgTickerValues() {\n\n  const [averageValue, setAverageValue] = useState(0);\n  const [pairsData, setPairsData] = useState([]);\n  const [loading, setLoading] = useState(true)\n\n  async function fetchTickerValues() {\n    try {\n      await Promise.all(\n        [fetch(`https://cors-anywhere.herokuapp.com/bitstamp.net/api/v2/ticker/btcusd`),\n        fetch(`https://cors-anywhere.herokuapp.com/api.coinbase.com/v2/exchange-rates?currency=BTC`),\n        fetch(`https://cors-anywhere.herokuapp.com/api-pub.bitfinex.com/v2/tickers?symbols=tBTCUSD`)\n      ]).then(([data1, data2, data3]) =>  {\n        return Promise.all([data1.json(),  data2.json(), data3.json()])\n      }).then(([bitstamp, coinbase, bitfinex]) => {\n        setPairsData([\n          { \n            name: \"bitstamp\",\n            value: parseFloat(bitstamp.bid) \n          },\n          { name: \"coinbase\",\n            value: parseFloat(coinbase.data.rates.USD)\n          },\n          { name: \"bitfinex\",\n            value: bitfinex[0][1] }\n        ]);\n        setLoading(false)\n      });\n\n    }\n    catch(error) {\n      console.log(error);\n    }\n  }\n\n  const getAverageTickerValues = () => {\n    if(pairsData.length===3)\n    {\n      let sum = pairsData.reduce((acc, current) => acc+current.value, 0); // divide in 2 lines to make it more readable\n      let avg =  sum/pairsData.length;\n      setAverageValue(avg.toFixed(2));\n    }\n  }\n\n  useEffect(() => getAverageTickerValues(), [pairsData])\n  useEffect(() => fetchTickerValues(), []);\n\n  return (\n    <div className=\"container-item\">\n      <Paper elevation={3} className=\"average-container\">\n      <h2>{ loading? \"Loading...\" : \"Average Ticker Values\" }</h2>\n        <Paper elevation={3} className=\"trading-pairs-paper\">\n          <h3>{ loading ? <CircularProgress /> : \"Single Ticker Values\" }</h3>\n          <div className=\"single-values\">\n            {\n              pairsData.length && (\n                pairsData.map(pair => <GJNumberLabel description={pair.name} value={pair.value} key={pair.name} />  )            \n              )\n            }\n          </div>\n          </Paper>\n          <div className=\"average\">\n            <h3>Average Value</h3>\n          <h4>$ {averageValue}</h4>  \n          </div>\n      </Paper>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport '../styles/styles.css';\nimport GJNumberLabel from \"./GJNumberLabel\";\nimport Paper from '@material-ui/core/Paper';\n\nexport default function GJNumbersView(props) {\n\n  const { pair } = props;\n  const [pairComparison, setPairComparison] = useState([]);\n  let [GJNumberLabels, setGJNumberLabels] = useState([]);\n\n  async function fetchPairComparison() {\n    try {\n      let resp = await fetch(`https://www.bitstamp.net/api/v2/ticker/${pair.symbol}`);\n      let fetchedPairData=await resp.json();\n      setPairComparison(fetchedPairData)\n    } catch (error) {\n      console.log(error);\n    }      \n  }\n\n  useEffect(() => {\n    if(pair.symbol)\n      fetchPairComparison();\n    else\n      setGJNumberLabels([]);\n  }, [pair]);\n\n  useEffect(() => {\n    returnGJNumberLabels();\n  }, [pairComparison])\n\n  function returnGJNumberLabels() {\n    const GJNumberLabelsArray=[];\n    for(let descriptionValuePair in pairComparison) {\n      GJNumberLabelsArray.push({\n        description:descriptionValuePair,\n        value: pairComparison[descriptionValuePair]\n      })\n    }\n    setGJNumberLabels(GJNumberLabelsArray);\n  }\n\n  return (\n    <div>\n      <Paper elevation={3} className=\"trading-pairs-paper\">\n        <h2>{pair.description ? pair.description : \"Please select a pair\"}</h2>  \n        <div className=\"pairs-list\">\n          {GJNumberLabels.length>1 && GJNumberLabels.map((GJNumberLabelsArrayElement, i) => \n            <GJNumberLabel {...GJNumberLabelsArrayElement} key={i} />\n          )}\n        </div>\n      </Paper>\n    </div>\n  )\n}","import React from 'react';\nimport '../styles/styles.css';\nimport Paper from '@material-ui/core/Paper';\nimport ColorButton from '@material-ui/core/Button';\n\nexport default function CositoDeArriba(props) {\n\n  const { pairData, handlePairChange, clearPairSelection, pair } = props;\n\n  const onPairSelect = (symbol, description) => {\n    handlePairChange(symbol, description);\n  }\n\n  return (\n    <div>\n      <Paper elevation={3} className=\"trading-pairs-paper cosito-de-arriba\">\n        <div className=\"button-container header\">\n          <h4>Choose Pair</h4>\n          <ColorButton\n            onClick={() => clearPairSelection() }\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"clear-pair-selection\"\n          >\n            Clear pair selection\n          </ColorButton>\n        </div>\n        <div className=\"button-container\">\n          {pairData.map((onePair, i) =>\n            <ColorButton\n              onClick={() => { onPairSelect(onePair.url_symbol, onePair.description) }}\n              variant=\"contained\"\n              color=\"primary\"\n              className={`${onePair.url_symbol===pair.symbol ? \"selected pair-button\" : \"pair-button\"}`}\n              key={i}>\n              {onePair.description}\n            </ColorButton>\n          )}\n        </div>\n      </Paper>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport '../styles/styles.css';\nimport GJNumbersView from \"./GJNumbersView\";\nimport CositoDeArriba from \"./CositoDeArriba\";\nimport Paper from '@material-ui/core/Paper';\n\n\nexport default function TradingPairsContainer() {\n\n  const [pair, setPair] = useState({\n      symbol: \"\",\n      description: \"\"\n  });\n\n  const [pairData, setPairData] = useState([]);\n\n  async function fetchPairData() {\n    try {    \n      let resp = await fetch(\"https://www.bitstamp.net/api/v2/trading-pairs-info/\");\n      let fetchedPairData=await resp.json();\n      setPairData(fetchedPairData);\n    } catch (error) {\n      console.log(error)\n    }      \n  }\n\n  const handlePairChange = (symbol, description) => {\n    setPair({\n      symbol: symbol,\n      description: description \n    });\n  }\n\n  const clearPairSelection = () => {\n    setPair({});\n  }\n\n  useEffect(() => { fetchPairData() }, [])\n\n  return (\n    <div  className=\"container-item\">\n      <Paper elevation={3} className=\"trading-pairs-container\">\n        <CositoDeArriba pair={pair} pairData={pairData} handlePairChange={handlePairChange} clearPairSelection={clearPairSelection} />\n        <GJNumbersView pair={pair} />\n      </Paper>\n      \n    </div>\n  )\n}","import React from 'react';\nimport '../styles/styles.css';\nimport AvgTickerValues from \"./AvgTickerValues\";\nimport TradingPairsContainer from \"./TradingPairsContainer\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\n\nexport default function AppContainer() {\n\n  return (\n    <div>\n      <Container className=\"app-container\" maxWidth=\"xl\">\n      <h1>\n        WELCOME TO MY GREENJINN ASSIGNMENT\n      </h1>\n        This is the main container of the single page App.\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-evenly\"\n          alignItems=\"flex-start\"\n        >\n          <AvgTickerValues />\n          <TradingPairsContainer />\n        </Grid>\n      </Container>\n    </div>\n  )\n}","import AppContainer from \"./components/AppContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AppContainer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}